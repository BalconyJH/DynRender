[project]
name = "dynrender_skia"
version = "0.2.6"
description = "使用skia-python将BiliBili动态渲染为图片"
authors = [
    { name = "DMC", email = "lzxder@outlook.com" },
    { name = "BalconyJH", email = "balconyjh@gmail.com" },
]
dependencies = [
    "skia-python==126.0b8",
    "httpx<1.0.0,>=0.24.1",
    "emoji<3.0.0,>=2.6.0",
    "dynamicadaptor<1.0.0,>=0.4.9",
    "aiofiles~=23.2",
]
requires-python = ">=3.9,<4.0"
readme = "README.md"
license = { text = "GNU GPLv3" }

[tool.pdm.dev-dependencies]
test = [
    "pytest~=8.1",
    "pytest-asyncio~=0.23",
    "pytest-cov~=4.1",
    "pytest-xdist~=3.5",
    "respx~=0.20",
]
tool = [
    "viztracer~=0.16",
]

[tool.pdm.build]
includes = ["dynrender_skia"]
[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 120
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
src_paths = ["dynrender_skia", "tests"]
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "UP037",  # quoted-annotation
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pyright]
pythonVersion = "3.8"
pythonPlatform = "All"
defineConstant = { PYDANTIC_V2 = true }
executionEnvironments = [
    { root = "./tests", extraPaths = [
        "./",
    ] },
    { root = "./" },
]

typeCheckingMode = "basic"
reportShadowedImports = false
disableBytesTypePromotions = true
[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
[pytest]
asyncio_mode = "auto"